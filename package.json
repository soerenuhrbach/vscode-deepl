{
	"name": "vscode-deepl",
	"displayName": "Translate with DeepL for Visual Studio Code",
	"description": "Easily translate into more than 25 languages directly from your visual studio code editor using DeepL.",
	"version": "1.1.0",
	"keywords": [
		"DeepL",
		"Translate",
		"Translator",
		"Languages",
		"Text Translations",
		"Visual Studio Code"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/soerenuhrbach/vscode-deepl.git"
	},
	"preview": false,
	"license": "MIT",
	"author": {
		"name": "SÃ¶ren Uhrbach",
		"email": "mail@soerenuhrbach.de"
	},
	"publisher": "soerenuhrbach",
	"engines": {
		"vscode": "^1.58.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"icon": "resources/logo@2.png",
	"galleryBanner": {
		"color": "#042b48",
		"theme": "dark"
	},
	"main": "./dist/extension.js",
	"contributes": {
		"configuration": [
			{
				"title": "DeepL",
				"properties": {
					"deepl.translationMode": {
						"type": "string",
						"default": "Replace",
						"enum": [
							"Replace",
							"InsertLineBelow",
							"InsertLineAbove"
						],
						"enumDescriptions": [
							"Replaces the text selected with the translation result",
							"The translation result will be inserted in a new line below the selected text",
							"The translation result will be inserted in a new line above the selected"
						]
					},
					"deepl.formality": {
						"type": "string",
						"default": "default",
						"enum": [
							"default",
							"less",
							"more"
						],
						"markdownDescription": "Whether the translated text should lean towards formal or informal language in certain languages. [See offical documentation](https://www.deepl.com/docs-api/translating-text/request/)"
					},
					"deepl.splitSentences": {
						"type": "string",
						"default": "1",
						"enum": [
							"0",
							"1",
							"nonewlines"
						],
						"markdownDescription": "Sets whether the translation engine should first split the input into sentences. [See offical documentation](https://www.deepl.com/docs-api/translating-text/request/)"
					},
					"deepl.preserveFormatting": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "Sets whether the translation engine should respect the original formatting, even if it would usually correct some aspects. [See offical documentation](https://www.deepl.com/docs-api/translating-text/request/)"
					},
					"deepl.tagHandling": {
						"type": "string",
						"default": "off",
						"enum": [
							"off",
							"html",
							"xml"
						],
						"markdownDescription": "Sets which kind of tags should be handled. [See offical documentation](https://www.deepl.com/docs-api/handling-xml/)"
					},
					"deepl.splittingTags": {
						"type": "string",
						"default": "",
						"markdownDescription": "Comma-separated list of XML tags which always cause splits. (Requires deepl.tagHandling to be enabled) [See offical documentation](https://www.deepl.com/docs-api/handling-xml/)"
					},
					"deepl.nonSplittingTags": {
						"type": "string",
						"default": "",
						"markdownDescription": "Comma-separated list of XML tags which never split sentences. (Requires deepl.tagHandling to be enabled) [See offical documentation](https://www.deepl.com/docs-api/handling-xml/)"
					},
					"deepl.ignoreTags": {
						"type": "string",
						"default": "",
						"markdownDescription": "Comma-separated list of XML tags that indicate text not to be translated. (Requires deepl.tagHandling to be enabled) [See offical documentation](https://www.deepl.com/docs-api/handling-xml/)"
					},
					"deepl.glossaryId": {
						"type": "string",
						"default": "",
						"markdownDescription": "Specify the glossary to use for the translation. (Requires a specified source language) [See offical documentation](https://www.deepl.com/docs-api/translate-text/translate-text/)"
					},
					"deepl.defaultTargetLanguage": {
						"type": "string",
						"enum": [
							"BG",
							"CS",
							"DA",
							"DE",
							"EL",
							"EN-GB",
							"EN-US",
							"ES",
							"ET",
							"FI",
							"FR",
							"HU",
							"ID",
							"IT",
							"JA",
							"KO",
							"LT",
							"LV",
							"NB",
							"NL",
							"PL",
							"PT",
							"RO",
							"RU",
							"SK",
							"SL",
							"SV",
							"TR",
							"UK",
							"ZH"
						],
						"markdownDescription": "Specifies the default target language the text should be translated to. The default target language will be overwriten by choosing a different language using the language chooser. (See all available target languages in the [offical documentation](https://www.deepl.com/docs-api/translate-text))"
					},
					"deepl.defaultSourceLanguage": {
						"type": "string",
						"enum": [
							"BG",
							"CS",
							"DA",
							"DE",
							"EL",
							"EN-GB",
							"EN-US",
							"ES",
							"ET",
							"FI",
							"FR",
							"HU",
							"ID",
							"IT",
							"JA",
							"KO",
							"LT",
							"LV",
							"NB",
							"NL",
							"PL",
							"PT",
							"RO",
							"RU",
							"SK",
							"SL",
							"SV",
							"TR",
							"UK",
							"ZH"
						],
						"markdownDescription": "Specifies the default source language the text should be translated to. The default source language will be overwriten by choosing a different language using the language chooser. (See all available source languages in the [offical documentation](https://www.deepl.com/docs-api/translate-text))"
					}
				}
			}
		],
		"commands": [
			{
				"command": "deepl.translate",
				"title": "DeepL: Translate",
				"shortTitle": "Translate"
			},
			{
				"command": "deepl.translateTo",
				"title": "DeepL: Translate to ...",
				"shortTitle": "Translate to ..."
			},
			{
				"command": "deepl.translateFromTo",
				"title": "DeepL: Translate from ... to ...",
				"shortTitle": "Translate from ..."
			},
			{
				"command": "deepl.configure",
				"title": "DeepL: Configure extension",
				"shortTitle": "Configure extension"
			},
			{
				"command": "deepl.translateAndPasteFromClipboard",
				"title": "DeepL: Translate and paste from clipboard",
				"shortTitle": "Translate and paste from clipboard"
			},
			{
				"command": "deepl.duplicateAndTranslate",
				"title": "DeepL: Duplicate and translate",
				"shortTitle": "Duplicate and translate"
			}
		],
		"menus": {
			"editor/context": [
				{
					"when": "editorHasSelection && !isInDiffEditor",
					"command": "deepl.translate",
					"group": "deepl@1"
				},
				{
					"when": "editorHasSelection && !isInDiffEditor",
					"command": "deepl.translateTo",
					"group": "deepl@2"
				},
				{
					"when": "editorHasSelection && !isInDiffEditor",
					"command": "deepl.translateFromTo",
					"group": "deepl@3"
				}
			]
		},
		"keybindings": [
			{
				"command": "deepl.translate",
				"when": "editorHasSelection && !isInDiffEditor",
				"key": "alt+t"
			},
			{
				"command": "deepl.translateTo",
				"when": "editorHasSelection && !isInDiffEditor",
				"key": "shift+alt+t"
			},
			{
				"command": "deepl.translateFromTo",
				"when": "editorHasSelection && !isInDiffEditor",
				"key": "ctrl+shift+alt+t",
				"mac": "cmd+shift+alt+t"
			},
			{
				"command": "deepl.translateAndPasteFromClipboard",
				"when": "!isInDiffEditor",
				"key": "ctrl+shift+v",
				"mac": "cmd+shift+v"
			},
			{
				"command": "deepl.duplicateAndTranslate",
				"when": "!isInDiffEditor",
				"key": "ctrl+shift+d",
				"mac": "cmd+shift+d"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "yarn run package",
		"postinstall": "husky install",
		"build": "webpack",
		"watch": "webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"pretest": "yarn run lint",
		"lint": "eslint src --ext ts",
		"lint:fix": "yarn lint --fix"
	},
	"devDependencies": {
		"@types/vscode": "^1.58.0",
		"@typescript-eslint/eslint-plugin": "^6.18.1",
		"@typescript-eslint/parser": "^6.18.1",
		"eslint": "^8.56.0",
		"husky": "^8.0.3",
		"lint-staged": "^15.2.0",
		"ts-loader": "^9.2.2",
		"ts-node": "^10.1.0",
		"typescript": "^5.3.3",
		"webpack": "^5.76.0",
		"webpack-cli": "^5.1.4"
	},
	"dependencies": {
		"@vue/reactivity": "^3.4.10",
		"deepl-node": "^1.11.0"
	},
	"lint-staged": {
		"*.{ts,tsx}": [
			"eslint --fix --ext ts"
		]
	}
}
